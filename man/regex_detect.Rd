% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities-regex.R
\name{regex_detect}
\alias{regex_detect}
\title{Detect the presence or absence of a pattern in a string}
\usage{
regex_detect(
  string,
  pattern,
  ignore.case = FALSE,
  perl = FALSE,
  fixed = FALSE,
  useBytes = FALSE
)
}
\arguments{
\item{string}{a character vector where matches are sought, or an object which
can be coerced by as.character to a character vector. Long vectors are supported.}

\item{pattern}{character string containing a regular expression (or character
string for fixed = TRUE) to be matched in the given character vector. Coerced
by as.character to a character string if possible. If a character vector of
length 2 or more is supplied, the first element is used with a warning. Missing
values are allowed except for regexpr, gregexpr and regexec.}

\item{ignore.case}{if FALSE, the pattern matching is case sensitive and if TRUE,
case is ignored during matching.}

\item{perl}{logical. Should Perl-compatible regexps be used?}

\item{fixed}{logical. If TRUE, pattern is a string to be matched as is. Overrides all conflicting arguments.}

\item{useBytes}{logical. If TRUE, pattern is a string to be matched as is. Overrides all conflicting arguments.}
}
\value{
a logical vector.
}
\description{
Detect the presence or absence of a pattern in a string
}
\examples{
fruit <- c("apple", "banana", "pear", "pinapple")
regex_detect(fruit, "a")
regex_detect(fruit, "^a")
regex_detect(fruit, "a$")
regex_detect(fruit, "b")
regex_detect(fruit, "[aeiou]")

}
