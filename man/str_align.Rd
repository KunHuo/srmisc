% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities-string.R
\name{str_align}
\alias{str_align}
\title{String alignment}
\usage{
str_align(x, sep = "\\\\r")
}
\arguments{
\item{x}{a character vector to be aligned.}

\item{sep}{the character on whose position the strings will be aligned. Left alignment
can be requested by setting sep = "\\l", right alignment by "\\r" and center
alignment by "\\c". Mind the backslashes, as if they are omitted, strings
would be aligned to the character l, r or c respectively. Default value is
"\\r", thus right alignment.}
}
\value{
a character vector containing the aligned strings
}
\description{
Align a vector of strings to the left, to the right, to the center or to the
first occurance of a specified character, e.g. to the decimal separator.
Alignment is achieved by padding the strings with empty spaces (which evidently
only will have an alignment effect if the text is displayed with a monospaced font).
}
\examples{
# align on (the first occuring) B
x <- c("ABCDMNB", "CDGHEBK", "BCI")
cbind(str_align(x, sep="B"))

# align to decimal separator (here point)
z <- c("    6.0", "6.00  ", " 45.12    ", "784", NA)
cbind(str_align(z, sep="."))

# right align, the width will be the max number of characters in x
cbind(str_align(x, sep="\\\\r"))
# left align
cbind(str_align(x, sep="\\\\l"))
# center
cbind(str_align(x, sep="\\\\c"))
}
