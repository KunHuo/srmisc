% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/typeset-lm.R
\name{typeset.lm}
\alias{typeset.lm}
\title{Typeset a(n) lm object}
\usage{
\method{typeset}{lm}(
  x,
  data = NULL,
  outcome = NULL,
  varnames = NULL,
  conf.level = 0.95,
  conf.brackets = NULL,
  conf.separator = NULL,
  digits.pvalue = 3,
  digits.effect = 2,
  ref.value = "Reference",
  select = c("n", "effect", "p.value"),
  filter = NULL,
  fold = FALSE,
  exp = FALSE,
  term = FALSE,
  ...
)
}
\arguments{
\item{x}{The object to be typeset.}

\item{data}{An optional data frame containing the data.}

\item{outcome}{An optional character vector specifying the outcome variable.}

\item{varnames}{An optional character vector specifying the variable names to
be used.}

\item{conf.level}{The confidence level for calculating confidence intervals.}

\item{conf.brackets}{An optional character vector specifying the format of
confidence interval brackets.}

\item{conf.separator}{An optional character vector specifying the separator
between lower and upper bounds of confidence intervals.}

\item{digits.pvalue}{The number of digits to display for p-values.}

\item{digits.effect}{The number of digits to display for effect estimates.}

\item{ref.value}{The reference value for categorical variables.}

\item{select}{An optional character vector specifying the variables to select
from the data frame.}

\item{filter}{An optional expression indicating rows to filter from the data
frame.}

\item{fold}{A logical value indicating whether to fold long lines.}

\item{exp}{A logical value indicating whether to exponentiate the coefficients.}

\item{term}{A logical value indicating whether to display interaction terms.}

\item{...}{Additional arguments passed to specific methods.}
}
\value{
a data frame with class 'typeset'.
}
\description{
Typeset a(n) lm object
}
\examples{
fit <- lm(Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width + Species, data = iris)

# base use
typeset(fit)

# select stat
typeset(fit, select = c("n", "effect", "se", "t", "p"))

# filter species
typeset(fit,
        select = c("n", "effect", "se", "t", "p"),
        filter = "Species")

# fold variables
typeset(fit, fold = TRUE)

# other params
typeset(fit,
        conf.brackets = "[]",
        conf.separator = ", ",
        digits.effect = 5,
        digits.pvalue = 5)
}
